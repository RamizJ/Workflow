<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WorkflowService</name>
    </assembly>
    <members>
        <member name="T:WorkflowService.Controllers.AuthenticationController">
            <summary>
            API аутентификации пользователей в системе
            </summary>
        </member>
        <member name="M:WorkflowService.Controllers.AuthenticationController.#ctor(Workflow.Services.Abstract.IAuthenticationService)">
            <summary>
            Constructor
            </summary>ы
            <param name="service"></param>
        </member>
        <member name="M:WorkflowService.Controllers.AuthenticationController.Login(Workflow.VM.ViewModels.VmAuthInput)">
            <summary>
            Вход в систему
            </summary>
            <param name="input">Данные аутентификации</param>
            <returns>JWT-токен и данные пользователя</returns>
        </member>
        <member name="M:WorkflowService.Controllers.AuthenticationController.Logout">
            <summary>
            Выход пользователя из системы
            </summary>
            <returns></returns>
        </member>
        <member name="T:WorkflowService.Controllers.GoalsController">
            <summary>
            API-методы работы с задачами
            </summary>
        </member>
        <member name="M:WorkflowService.Controllers.GoalsController.#ctor(Microsoft.AspNetCore.Identity.UserManager{Workflow.DAL.Models.ApplicationUser},Workflow.Services.Abstract.IGoalsService,Workflow.Services.Abstract.IGoalAttachmentsService,WorkflowService.Services.IFormFilesService)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:WorkflowService.Controllers.GoalsController.Get(System.Int32)">
            <summary>
            Получить задачу по идентификатору, если она доступна пользователю
            </summary>
            <param name="id">Идентификатор задачи</param>
            <returns>Задача</returns>
        </member>
        <member name="M:WorkflowService.Controllers.GoalsController.GetPage(System.Nullable{System.Int32},System.Int32,System.Int32,System.String,Workflow.Services.Common.FieldFilter[],Workflow.Services.Common.FieldSort[],System.Boolean)">
            <summary>
            Постраничная загрузка задач с фильтрацией и сортировкой
            </summary>
            <param name="projectId">Идентификатор проекта. Если не указан, то загружаются задачи по всем проектам</param>
            <param name="pageNumber">Номер страницы</param>
            <param name="pageSize">Размер страницы</param>
            <param name="filter">Фильтр по всем полям</param>
            <param name="filterFields">Конкретные поля фильтрации</param>
            <param name="sortFields">Поля сортировки</param>
            <param name="withRemoved">Вместе с удаленными</param>
            <returns>Коллеция задач</returns>
        </member>
        <member name="M:WorkflowService.Controllers.GoalsController.GetRange(System.Int32[])">
            <summary>
            Получение задач по идентификаторам. Возвращаются только задачи доступные пользователю
            </summary>
            <param name="ids">Идентификаторы задач</param>
            <returns>Коллекция задач</returns>
        </member>
        <member name="M:WorkflowService.Controllers.GoalsController.Create(Workflow.VM.ViewModels.VmGoal)">
            <summary>
            Создание задачи
            </summary>
            <param name="goal">Создаваемая задача</param>
            <returns>Созданная задача</returns>
        </member>
        <member name="M:WorkflowService.Controllers.GoalsController.Update(Workflow.VM.ViewModels.VmGoal)">
            <summary>
            Обновление задачи
            </summary>
            <param name="goal">Обновляемая задача</param>
            <returns></returns>
        </member>
        <member name="M:WorkflowService.Controllers.GoalsController.Delete(System.Int32)">
            <summary>
            Удаление задачи
            </summary>
            <param name="id">Идентификатор удаляемой задачи</param>
            <returns></returns>
        </member>
        <member name="M:WorkflowService.Controllers.GoalsController.GetAttachments(System.Int32)">
            <summary>
            Получение вложений задачи
            </summary>
            <param name="goalId">Идентификатор задачи</param>
            <returns>Коллекция вложений</returns>
        </member>
        <member name="M:WorkflowService.Controllers.GoalsController.AddAttachments(System.Int32,Microsoft.AspNetCore.Http.IFormFileCollection)">
            <summary>
            Добавление вложения
            </summary>
            <param name="goalId">Идентификатор задачи</param>
            <param name="files">Коллекция файлов</param>
            <returns></returns>
        </member>
        <member name="M:WorkflowService.Controllers.GoalsController.RemoveAttachments(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Удаление вложений. Удаляются только те вложения тех задач, которые доступны пользователю
            </summary>
            <param name="attachmentIds">Идентификаторы вложений</param>
            <returns></returns>
        </member>
        <member name="M:WorkflowService.Controllers.GoalsController.DownloadAttachmentFile(System.Int32)">
            <summary>
            
            </summary>
            <param name="attachmentId"></param>
            <returns></returns>
        </member>
        <member name="T:WorkflowService.Controllers.ProjectsController">
            <summary>
            API-методы работы с проектами
            </summary>
        </member>
        <member name="M:WorkflowService.Controllers.ProjectsController.#ctor(Microsoft.AspNetCore.Identity.UserManager{Workflow.DAL.Models.ApplicationUser},Workflow.Services.Abstract.IProjectsService,Workflow.Services.Abstract.IProjectTeamsService)">
            <summary>
            Конструктор
            </summary>
            <param name="userManager"></param>
            <param name="projectsService"></param>
            <param name="projectTeamsService"></param>
        </member>
        <member name="M:WorkflowService.Controllers.ProjectsController.Get(System.Int32)">
            <summary>
            Получение проекта по идентификатору
            </summary>
            <param name="id">Идентификатор проекта</param>
            <returns>Проект. Только если доступен пользователю</returns>
        </member>
        <member name="M:WorkflowService.Controllers.ProjectsController.GetPage(System.Int32,System.Int32,System.String,Workflow.Services.Common.FieldFilter[],Workflow.Services.Common.FieldSort[],System.Boolean)">
            <summary>
            Постраничная загрузка проектов с фильтрацией и сортировкой
            </summary>
            <param name="pageNumber">Номер страницы</param>
            <param name="pageSize">Размер страницы</param>
            <param name="filter">Фильтр по всем полям</param>
            <param name="filterFields">Конкретные поля фильтрации</param>
            <param name="sortFields">Поля сортировки</param>
            <param name="withRemoved">Вместе с удаленными</param>
            <returns>Коллекция проектов</returns>
        </member>
        <member name="M:WorkflowService.Controllers.ProjectsController.GetTeamsPage(System.Int32,System.Int32,System.Int32,System.String,Workflow.Services.Common.FieldFilter[],Workflow.Services.Common.FieldSort[],System.Boolean)">
            <summary>
            Постраничная загрузка списка команд проекта с фильтрацией и сортировкой
            </summary>
            <param name="projectId">Идентификатор проекта</param>
            <param name="pageNumber">Номер страницы</param>
            <param name="pageSize">Размер страницы</param>
            <param name="filter">Фильтр по всем полям</param>
            <param name="filterFields">Конкретные поля фильтрации</param>
            <param name="sortFields">Поля сортировки</param>
            <param name="withRemoved">Вместе с удаленными</param>
            <returns>Коллекция команд</returns>
        </member>
        <member name="M:WorkflowService.Controllers.ProjectsController.GetRange(System.Int32[])">
            <summary>
            Получение проектов по идентификаторам
            </summary>
            <param name="ids">Идентификаторы проектов</param>
            <returns>Коллекция проектов</returns>
        </member>
        <member name="M:WorkflowService.Controllers.ProjectsController.Create(Workflow.VM.ViewModels.VmProject)">
            <summary>
            Создание проекта
            </summary>
            <param name="project">Проект</param>
            <returns>Результат выполнения операции</returns>
        </member>
        <member name="M:WorkflowService.Controllers.ProjectsController.Update(Workflow.VM.ViewModels.VmProject)">
            <summary>
            Обновление проектов
            </summary>
            <param name="project">Обновляемый проект</param>
            <returns></returns>
        </member>
        <member name="M:WorkflowService.Controllers.ProjectsController.Delete(System.Int32)">
            <summary>
            Удаление проектов
            </summary>
            <param name="id">Идентификатор проекта</param>
            <returns>Результат выполнения операции</returns>
        </member>
        <member name="M:WorkflowService.Controllers.ProjectsController.AddTeam(System.Int32,System.Int32)">
            <summary>
            Добавление команды в список команд проекта
            </summary>
            <param name="projectId">Идентификатор проекта</param>
            <param name="teamId">Идентификатор команды</param>
            <returns></returns>
        </member>
        <member name="M:WorkflowService.Controllers.ProjectsController.RemoveTeam(System.Int32,System.Int32)">
            <summary>
            Удаление команды из списка команд проекта
            </summary>
            <param name="projectId">Идентификатор проекта</param>
            <param name="teamId">Идентификатор команды</param>
            <returns></returns>
        </member>
        <member name="T:WorkflowService.Controllers.TeamsController">
            <summary>
            API-методы работы с командами
            </summary>
        </member>
        <member name="M:WorkflowService.Controllers.TeamsController.#ctor(Microsoft.AspNetCore.Identity.UserManager{Workflow.DAL.Models.ApplicationUser},Workflow.Services.Abstract.ITeamsService,Workflow.Services.Abstract.ITeamUsersService,Workflow.Services.Abstract.ITeamProjectsService)">
            <summary>
            Конструктор
            </summary>
            <param name="userManager"></param>
            <param name="teamsService"></param>
            <param name="teamUsersService"></param>
            <param name="teamProjectsService"></param>
        </member>
        <member name="M:WorkflowService.Controllers.TeamsController.Get(System.Int32)">
            <summary>
            Получить команду по идентификатору
            </summary>
            <param name="id">Идентификатор команды</param>
            <returns>Команда</returns>
        </member>
        <member name="M:WorkflowService.Controllers.TeamsController.GetPage(System.Int32,System.Int32,System.String,Workflow.Services.Common.FieldFilter[],Workflow.Services.Common.FieldSort[],System.Boolean)">
            <summary>
            Постраничная загрузка команд с фильтрацией и сортировкой
            </summary>
            <param name="pageNumber">Номер страницы</param>
            <param name="pageSize">Размер страницы</param>
            <param name="filter">Фильтр по всем полям</param>
            <param name="filterFields">Поля для фильтрации</param>
            <param name="sortFields">Поля для сортировки</param>
            <param name="withRemoved">Вместе с удаленными командами</param>
            <returns>Коллекция команд</returns>
        </member>
        <member name="M:WorkflowService.Controllers.TeamsController.GetUsersPage(System.Int32,System.Int32,System.Int32,System.String,Workflow.Services.Common.FieldFilter[],Workflow.Services.Common.FieldSort[],System.Boolean)">
            <summary>
            Постраничная загрузка пользователей команды с фильтрацией и сортировкой
            </summary>
            <param name="teamId">Идентификатор команды</param>
            <param name="pageNumber">Номер страницы</param>
            <param name="pageSize">Размер страницы</param>
            <param name="filter">Фильтр по всем полям</param>
            <param name="filterFields">Конкретные поля фильтрации</param>
            <param name="sortFields">Поля сортировки</param>
            <param name="withRemoved">Вместе с удаленными</param>
            <returns>Коллекция пользователей команды</returns>
        </member>
        <member name="M:WorkflowService.Controllers.TeamsController.GetProjectsPage(System.Int32,System.Int32,System.Int32,System.String,Workflow.Services.Common.FieldFilter[],Workflow.Services.Common.FieldSort[],System.Boolean)">
            <summary>
            Постраничная загрузка проектов команды с фильтрацией и сортировкой
            </summary>
            <param name="teamId">Идентификатор команды</param>
            <param name="pageNumber">Номер страницы</param>
            <param name="pageSize">Размер страницы</param>
            <param name="filter">Фильтр по всем полям</param>
            <param name="filterFields">Конкретные поля фильтрации</param>
            <param name="sortFields">Поля сортировки</param>
            <param name="withRemoved">Вместе с удаленными</param>
            <returns>Коллекция пользователей команды</returns>
        </member>
        <member name="M:WorkflowService.Controllers.TeamsController.GetRange(System.Int32[])">
            <summary>
            Получить команд по идентификаторам
            </summary>
            <param name="ids">Идентификаторы команд</param>
            <returns>Коллецция команд</returns>
        </member>
        <member name="M:WorkflowService.Controllers.TeamsController.Create(System.Int32,Workflow.VM.ViewModels.VmTeam)">
            <summary>
            Создать команду
            </summary>
            <param name="projectId">Идентификатор проекта</param>
            <param name="team">Новая команда</param>
            <returns>Команда</returns>
        </member>
        <member name="M:WorkflowService.Controllers.TeamsController.Update(Workflow.VM.ViewModels.VmTeam)">
            <summary>
            Обновление команды
            </summary>
            <param name="team">Команда</param>
            <returns>Результат выполнения операции</returns>
        </member>
        <member name="M:WorkflowService.Controllers.TeamsController.Delete(System.Int32)">
            <summary>
            Удаление команды
            </summary>
            <param name="id">Идентификатор команды</param>
            <returns>Результат выполнения операции</returns>
        </member>
        <member name="M:WorkflowService.Controllers.TeamsController.AddUser(System.Int32,System.String)">
            <summary>
            Добавление пользователя в команду
            </summary>
            <param name="teamId"></param>
            <param name="userId">Идентификатор добавляемого пользователя</param>
            <returns></returns>
        </member>
        <member name="M:WorkflowService.Controllers.TeamsController.RemoveUser(System.Int32,System.String)">
            <summary>
            Удаление пользователя из команды
            </summary>
            <param name="teamId">Идентификатор команды</param>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Удаленный пользователь</returns>
        </member>
        <member name="M:WorkflowService.Controllers.TeamsController.AddProject(System.Int32,System.Int32)">
            <summary>
            Добавление проекта в список проектов команды
            </summary>
            <param name="teamId"></param>
            <param name="projectId">Идентификатор проекта</param>
            <returns></returns>
        </member>
        <member name="M:WorkflowService.Controllers.TeamsController.RemoveProject(System.Int32,System.Int32)">
            <summary>
            Удаление проекта из списка проектов команды
            </summary>
            <param name="teamId">Идентификатор команды</param>
            <param name="projectId">Идентификатор проекта</param>
            <returns></returns>
        </member>
        <member name="T:WorkflowService.Controllers.UsersController">
            <summary>
            API работы с пользователями системы
            </summary>
        </member>
        <member name="M:WorkflowService.Controllers.UsersController.#ctor(Microsoft.AspNetCore.Identity.UserManager{Workflow.DAL.Models.ApplicationUser},Workflow.Services.Abstract.IUsersService)">
            <summary>
            Конструктор 
            </summary>
            <param name="userManager"></param>
            <param name="service"></param>
        </member>
        <member name="M:WorkflowService.Controllers.UsersController.Get(System.String)">
            <summary>
            Получение пользователя по идентификатору
            </summary>
            <param name="id">Идентификатор пользователя</param>
            <returns></returns>
        </member>
        <member name="M:WorkflowService.Controllers.UsersController.GetCurrent">
            <summary>
            Получение параметров текущего пользователя
            </summary>
            <returns>Параметры текущего пользователя</returns>
        </member>
        <member name="M:WorkflowService.Controllers.UsersController.GetPage(System.Int32,System.Int32,System.String,Workflow.Services.Common.FieldFilter[],Workflow.Services.Common.FieldSort[],System.Boolean)">
            <summary>
            Постраничная загрузка пользователей с фильтрацией и сортировкой
            </summary>
            <param name="pageNumber">Номер страницы</param>
            <param name="pageSize">Размер страницы</param>
            <param name="filter">Фильтрация по всем полям если не указаны конкретные поля для фильтрации</param>
            <param name="filterFields">Поля фильтрации</param>
            <param name="sortFields">Поля сортировки. Сортировка производится по порядку указанных полей</param>
            <param name="withRemoved">Вместе с удаленными</param>
            <returns>Коллекция пользователей</returns>
        </member>
        <member name="M:WorkflowService.Controllers.UsersController.GetRange(System.String[])">
            <summary>
            Получение коллекции пользователей по идентификаторам
            </summary>
            <param name="ids">Идентификаторы пользователей</param>
            <returns></returns>
        </member>
        <member name="M:WorkflowService.Controllers.UsersController.IsEmailExist(System.String)">
            <summary>
            Проверка существования пользователя с указанным email
            </summary>
            <param name="email">Email пользователя</param>
            <returns></returns>
        </member>
        <member name="M:WorkflowService.Controllers.UsersController.IsUserNameExist(System.String)">
            <summary>
            Проверка существования пользователя с указанным именем пользователя
            </summary>
            <param name="userName">Имя пользователя</param>
            <returns></returns>
        </member>
        <member name="M:WorkflowService.Controllers.UsersController.Create(Workflow.VM.ViewModels.VmNewUser)">
            <summary>
            Добавление нового пользователя
            </summary>
            <param name="user">Параметры пользователя. Пароль должен содержать не менее 6 символов, включая цифры</param>
            <returns></returns>
        </member>
        <member name="M:WorkflowService.Controllers.UsersController.Update(Workflow.VM.ViewModels.VmUser)">
            <summary>
            Обновление пользователя
            </summary>
            <param name="user">Параметры пользователя</param>
            <returns>Результат</returns>
        </member>
        <member name="M:WorkflowService.Controllers.UsersController.Delete(System.String)">
            <summary>
            Удаление пользователя
            </summary>
            <param name="id">Идентификатор пользователя</param>
            <returns></returns>
        </member>
        <member name="M:WorkflowService.Controllers.UsersController.ChangePassword(System.String,System.String)">
            <summary>
            Изменение пароля пользователя. Доступно только текущему пользователю
            </summary>
            <param name="currentPassword">Текущий пароль</param>
            <param name="newPassword">Новый пароль</param>
            <returns></returns>
        </member>
        <member name="M:WorkflowService.Controllers.UsersController.ResetPassword(System.String,System.String)">
            <summary>
            Сброс пароля пользователя. Доступно только администраторам
            </summary>
            <param name="id">Идентификатор пользователя</param>
            <param name="newPassword">Новый пароль</param>
            <returns></returns>
        </member>
        <member name="T:WorkflowService.Extensions.DefaultDataInitialization">
            <summary>
            Инициализация БД начальными данными
            </summary>
        </member>
        <member name="M:WorkflowService.Extensions.DefaultDataInitialization.InitializeDefaultData(Microsoft.Extensions.Hosting.IHost)">
            <summary>
            Инициализация БД начальными данными
            </summary>
            <param name="host"></param>
            <returns></returns>
        </member>
        <member name="T:WorkflowService.Services.FormFilesService">
            <inheritdoc />
        </member>
        <member name="M:WorkflowService.Services.FormFilesService.GetAttachments(Microsoft.AspNetCore.Http.IFormFileCollection)">
            <inheritdoc />
        </member>
        <member name="T:WorkflowService.Services.IFormFilesService">
            <summary>
            Преобразование файлов во вложения
            </summary>
        </member>
        <member name="M:WorkflowService.Services.IFormFilesService.GetAttachments(Microsoft.AspNetCore.Http.IFormFileCollection)">
            <summary>Преобразование файлов во вложения</summary>
            <param name="files">Файлы</param>
            <returns>Коллекция вложений</returns>
        </member>
    </members>
</doc>
